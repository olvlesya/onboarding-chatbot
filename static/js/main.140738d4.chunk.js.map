{"version":3,"sources":["components/Message/Message.tsx","data.tsx","images/logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Message","type","me","jsx","fullScreen","useFullScreenHandle","className","classnames","handle","onClick","enter","steps","greeting","messages","userData","name","options","text","next","intro","introCourse","title","src","rateCourse1","Array","map","_c","id","String","rateCourse2","rateCourse3","answer","end","App","useState","step","setStep","setMessages","scrollRef","useRef","currentStep","useEffect","prevMessages","concat","setTimeout","current","scrollIntoView","logo","alt","message","ref","option","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.140738d4.chunk.js","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useFullScreenHandle, FullScreen } from \"react-full-screen\";\nimport { messageType } from \"../../data\";\n\nexport const Message: React.FC<messageType> = ({ type, me = false, jsx }) => {\n  const fullScreen = useFullScreenHandle();\n\n  return (\n    <li className={classnames(\"message\", { me })}>\n      <div className={classnames(\"text\", { me })}>\n        {type === \"iframe\" ? (\n          <div>\n            <FullScreen handle={fullScreen}>\n              <div>{jsx()}</div>\n            </FullScreen>\n            <button onClick={fullScreen.enter}>Во весь экран</button>\n          </div>\n        ) : (\n          jsx()\n        )}\n      </div>\n    </li>\n  );\n};\n","export type stepsOptions =\n  | \"greeting\"\n  | \"intro\"\n  | \"introCourse\"\n  | \"rateCourse1\"\n  | \"rateCourse2\"\n  | \"rateCourse3\"\n  | \"answer\"\n  | \"end\";\nexport type messageType = {\n  jsx: () => JSX.Element;\n  type?: \"message\" | \"iframe\";\n  me?: boolean;\n};\n\nexport type stepsType = {\n  [key in stepsOptions]: {\n    messages: Array<messageType>;\n    options: Array<{ text: string; next: stepsOptions }>;\n  };\n};\n\nexport const steps: stepsType = {\n  greeting: {\n    messages: [\n      {\n        jsx: () => (\n          <span>\n            Привет, {userData.name}! Меня зовут ... я автоматический бот и\n            помогаю сотрудникам лидертим в их ежедневной работе. Рад что ты\n            присоединяешься к нашей команде.\n          </span>\n        ),\n      },\n      {\n        jsx: () => <span>Рассказать подробнее о компании?</span>,\n      },\n    ],\n    options: [\n      {\n        text: \"Привет, давай!\",\n        next: \"intro\",\n      },\n    ],\n  },\n  intro: {\n    messages: [\n      {\n        jsx: () => <span>Вводный курс о Компании</span>,\n      },\n    ],\n    options: [\n      {\n        text: \"Запустить курс!\",\n        next: \"introCourse\",\n      },\n    ],\n  },\n  introCourse: {\n    messages: [\n      {\n        jsx: () => (\n          <iframe\n            title=\"gfd-training\"\n            src=\"./trainings/gfd/index.html\"\n          ></iframe>\n        ),\n        type: \"iframe\",\n      },\n    ],\n    options: [\n      {\n        text: \"Оценить курс\",\n        next: \"rateCourse1\",\n      },\n    ],\n  },\n  rateCourse1: {\n    messages: [\n      {\n        jsx: () => (\n          <span>\n            1. Оцените, пожалуйста, по шкале от 1 до 10 - насколько Вам\n            понравился welcome курс. Где 0 – совсем не понравился, а 10 – очень\n            понравился.\n          </span>\n        ),\n      },\n    ],\n    options: [...Array(11)].map((_c, id) => ({\n      text: String(id),\n      next: \"rateCourse2\",\n    })),\n  },\n  rateCourse2: {\n    messages: [\n      {\n        jsx: () => (\n          <span>\n            2. Оцените, пожалуйста, по шкале от 1 до 10 - насколько понятно для\n            Вас была донесена информация о Компании и сфере её деятельности. Где\n            0 – совсем не понятно, а 10 – понятно полностью.\n          </span>\n        ),\n      },\n    ],\n    options: [...Array(11)].map((_c, id) => ({\n      text: String(id),\n      next: \"rateCourse3\",\n    })),\n  },\n  rateCourse3: {\n    messages: [\n      {\n        jsx: () => (\n          <span>\n            3. Оцените, пожалуйста, по шкале от 1 до 5, посоветовали бы Вы этот\n            курс своему коллеге новичку . Где 0 – точно нет, а 5 – конечно да!\n          </span>\n        ),\n      },\n    ],\n    options: [...Array(11)].map((_c, id) => ({\n      text: String(id),\n      next: \"answer\",\n    })),\n  },\n  answer: {\n    messages: [\n      {\n        jsx: () => <span>Спасибо за ваши ответы!</span>,\n      },\n    ],\n    options: [\n      {\n        text: \"Курс окончен\",\n        next: \"end\",\n      },\n    ],\n  },\n  end: {\n    messages: [],\n    options: [],\n  },\n};\n\nexport const userData = {\n  name: \"Олеся\",\n} as const;\n","export default __webpack_public_path__ + \"static/media/logo.aacb8274.svg\";","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { Message } from \"./components/Message\";\nimport { steps, stepsOptions, messageType } from \"./data\";\nimport logo from \"./images/logo.svg\";\nimport \"./App.scss\";\nimport \"./fonts.css\";\n\nfunction App() {\n  const [step, setStep] = useState<stepsOptions>(\"greeting\");\n  const [messages, setMessages] = useState<messageType[]>([]);\n  const scrollRef = useRef<HTMLLIElement | null>(null);\n  const currentStep = steps[step];\n\n  useEffect(() => {\n    setMessages((prevMessages) => prevMessages.concat(currentStep.messages));\n  }, [step]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setTimeout(() => {\n      scrollRef.current?.scrollIntoView();\n    }, 10);\n  }, [messages]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"chat\">\n        <div className=\"chat__head\">\n          <img src={logo} alt=\"\" />\n        </div>\n        <div className=\"chat__body\">\n          <ul className=\"messages\">\n            {messages.map((message, id) => (\n              <Message key={id} {...message} />\n            ))}\n            <li ref={scrollRef} />\n          </ul>\n        </div>\n        <div className=\"chat__footer\">\n          {currentStep.options.map((option, id) => (\n            <button\n              key={id}\n              className=\"full\"\n              onClick={() => {\n                setMessages((prevMessages) =>\n                  prevMessages.concat([\n                    {\n                      jsx: () => <span>{option.text}</span>,\n                      me: true,\n                    },\n                  ])\n                );\n                setStep(option.next);\n              }}\n            >\n              {option.text}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}